{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChatBox',\n  data() {\n    return {\n      currentMessage: '',\n      messages: []\n    };\n  },\n  methods: {\n    async sendMessage(message) {\n      this.messages.push({\n        from: 'user',\n        data: message\n      });\n      await axios.post('http://localhost:3000/chatbot', {\n        message: message\n      }).then(response => {\n        this.messages.push({\n          from: 'chatGpt',\n          data: response.data.data // Access the 'data' property of the response object\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","currentMessage","messages","methods","sendMessage","message","push","from","post","then","response"],"sources":["C:\\Users\\d.a.fernandez.rosell\\OneDrive - Accenture\\Desktop\\Puebas\\chatbot\\src\\components\\ChatBox.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"chatbox-container\">\r\n<div class=\"container\">\r\n  <h1>Ai Chat Bot</h1>\r\n<div class=\"messageBox mt-8\">\r\n  <template v-for=\"(message, index) in messages\" :key=\"index\">\r\n    <div :class=\"message.from == 'user' ? 'messageFromUser' : 'messageFromChatGpt'\">\r\n      <div :class=\"message.from == 'user' ? 'userMessageWrapper' : 'chatGptMessageWrapper'\">\r\n        <div :class=\"message.from == 'user' ? 'userMessageContent' : 'chatGptMessageContent'\">{{ message.data }}</div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n</div>\r\n<div class=\"inputContainer\">\r\n  <input\r\n    v-model=\"currentMessage\"\r\n    type=\"text\"\r\n    class=\"messageInput\"\r\n    placeholder=\"Ask me anything...\"\r\n  />\r\n  <button\r\n    @click=\"sendMessage(currentMessage)\"\r\n    class=\"askButton\"\r\n  >\r\n    Ask\r\n  </button>\r\n</div>\r\n</div>\r\n</div>\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ChatBox',\r\n  data() {\r\n    return {\r\n      currentMessage: '',\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async sendMessage(message) {\r\n      this.messages.push({\r\n        from: 'user',\r\n        data: message,\r\n      });\r\n      await axios\r\n        .post('http://localhost:3000/chatbot', {\r\n          message: message,\r\n        })\r\n       .then((response) => {\r\n  this.messages.push({\r\n    from: 'chatGpt',\r\n    data: response.data.data, // Access the 'data' property of the response object\r\n  });\r\n});\r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap');\r\n\r\n.chatbox-container {\r\n  position: fixed;\r\n  bottom: 24px;\r\n  right: 24px;\r\n  z-index: 1000;\r\n}\r\n\r\n.container {\r\n  width: 360px;\r\n  height: 600px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\nh1 {\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  color: #222;\r\n  padding: 16px;\r\n  margin: 0;\r\n  background-color: #f7f7f7;\r\n  border-bottom: 1px solid #e7e7e7;\r\n}\r\n\r\n.messageBox {\r\n  padding: 16px;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.messageFromUser,\r\n.messageFromChatGpt {\r\n  display: flex; }\r\n\r\n\r\n\r\n.messageBox {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  padding: 0 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  flex-grow: 1;\r\n}\r\n\r\n.messageFromUser,\r\n.messageFromChatGpt {\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.userMessageWrapper,\r\n.chatGptMessageWrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.userMessageWrapper {\r\n  align-self: flex-end;\r\n}\r\n\r\n.chatGptMessageWrapper {\r\n  align-self: flex-start;\r\n}\r\n\r\n.userMessageContent,\r\n.chatGptMessageContent {\r\n  max-width: 60%;\r\n  padding: 8px 12px;\r\n  border-radius: 18px;\r\n  margin-bottom: 2px;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.userMessageContent {\r\n  background-color: #1877F2;\r\n  color: white;\r\n  border-top-left-radius: 0;\r\n}\r\n\r\n.chatGptMessageContent {\r\n  background-color: #EDEDED;\r\n  color: #222;\r\n  border-top-right-radius: 0;\r\n}\r\n\r\n.userMessageTimestamp,\r\n.chatGptMessageTimestamp {\r\n  font-size: 10px;\r\n  color: #999;\r\n  margin-top: 2px;\r\n}\r\n\r\n.userMessageTimestamp {\r\n  align-self: flex-end;\r\n}\r\n\r\n.chatGptMessageTimestamp {\r\n  align-self: flex-start;\r\n}\r\n\r\n.inputContainer {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.messageInput {\r\n  flex-grow: 1;\r\n  border: none;\r\n  outline: none;\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  border-radius: 24px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.askButton {\r\n  background-color: #1877F2;\r\n  color: white;\r\n  font-size: 16px;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 24px;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.askButton:hover {\r\n  background-color: #145CB3;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .container {\r\n    width: 100%;\r\n    max-width: none;\r\n    border-radius: 0;\r\n  }\r\n}\r\n.chatbox-container {\r\n  position: fixed;\r\n  bottom: 24px;\r\n  right: 24px;\r\n  z-index: 1000;\r\n}\r\n\r\n\r\n.messageBox {\r\n  padding: 16px;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.messageFromUser,\r\n.messageFromChatGpt {\r\n  display: flex;\r\n}\r\n</style>"],"mappings":";AAyCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAACC,OAAO,EAAE;MACzB,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC;QACjBC,IAAI,EAAE,MAAM;QACZP,IAAI,EAAEK;MACR,CAAC,CAAC;MACF,MAAMP,KAAI,CACPU,IAAI,CAAC,+BAA+B,EAAE;QACrCH,OAAO,EAAEA;MACX,CAAC,EACDI,IAAI,CAAEC,QAAQ,IAAK;QACzB,IAAI,CAACR,QAAQ,CAACI,IAAI,CAAC;UACjBC,IAAI,EAAE,SAAS;UACfP,IAAI,EAAEU,QAAQ,CAACV,IAAI,CAACA,IAAI,CAAE;QAC5B,CAAC,CAAC;MACJ,CAAC,CAAC;IAEE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}